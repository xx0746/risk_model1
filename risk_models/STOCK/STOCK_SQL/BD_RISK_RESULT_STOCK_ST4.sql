CREATE TABLE BD_RISK_RESULT_STOCK_ST4 (
ID NUMBER(20) NOT NULL ,
ORG_CODE VARCHAR2(64 CHAR) NOT NULL ,
ORDER_NO VARCHAR2(128 CHAR) NOT NULL ,
COP_G_NO VARCHAR2(128 CHAR) NOT NULL ,
SIGN_DT DATE NULL,
QTY_ORDER NUMBER(20,5) NULL,
QTY_DELIV NUMBER(20,5) NULL,
QTY_STOCK NUMBER(20,5) NULL,
PRICE_ORDER NUMBER(20,5) NULL,
PRICE_DELIV NUMBER(20,5) NULL,
PRICE_STOCK NUMBER(20,5) NULL,
RISK_LABEL VARCHAR2(64 CHAR) NOT NULL ,
SCORE NUMBER(20,5) NULL,
CHECK_TIME DATE NOT NULL,
ISCURRENT NUMBER(10) NOT NULL,
LASTUPDATE DATE NOT NULL
)
LOGGING
NOCOMPRESS
NOCACHE
;

COMMENT ON COLUMN BD_RISK_RESULT_STOCK_ST4.ID IS 'ID';
COMMENT ON COLUMN BD_RISK_RESULT_STOCK_ST4.ORG_CODE IS '公司社会信用代码';
COMMENT ON COLUMN BD_RISK_RESULT_STOCK_ST4.ORDER_NO IS '采购订单号';
COMMENT ON COLUMN BD_RISK_RESULT_STOCK_ST4.COP_G_NO IS '料号';
COMMENT ON COLUMN BD_RISK_RESULT_STOCK_ST4.SIGN_DT IS '订单签订时间';
COMMENT ON COLUMN BD_RISK_RESULT_STOCK_ST4.QTY_ORDER IS '订购数量';
COMMENT ON COLUMN BD_RISK_RESULT_STOCK_ST4.QTY_DELIV IS '交货数量';
COMMENT ON COLUMN BD_RISK_RESULT_STOCK_ST4.QTY_STOCK IS '入库数量';
COMMENT ON COLUMN BD_RISK_RESULT_STOCK_ST4.PRICE_ORDER IS '订购价值';
COMMENT ON COLUMN BD_RISK_RESULT_STOCK_ST4.PRICE_DELIV IS '交货价值';
COMMENT ON COLUMN BD_RISK_RESULT_STOCK_ST4.PRICE_STOCK IS '入库价值';
COMMENT ON COLUMN BD_RISK_RESULT_STOCK_ST4.RISK_LABEL IS '风控标签';
COMMENT ON COLUMN BD_RISK_RESULT_STOCK_ST4.SCORE IS '风控分数';
COMMENT ON COLUMN BD_RISK_RESULT_STOCK_ST4.CHECK_TIME IS '运行时间';
COMMENT ON COLUMN BD_RISK_RESULT_STOCK_ST4.ISCURRENT IS '是否使用';
COMMENT ON COLUMN BD_RISK_RESULT_STOCK_ST4.LASTUPDATE IS '数据最后更新时间';


-- ----------------------------
-- Indexes structure for table BD_RISK_RESULT_STOCK_ST4
-- ----------------------------

-- ----------------------------
-- Checks structure for table BD_RISK_RESULT_STOCK_ST4
-- ----------------------------
ALTER TABLE BD_RISK_RESULT_STOCK_ST4 ADD CHECK (ID IS NOT NULL);

-- ----------------------------
-- Primary Key structure for table UPLOAD_FILE
-- ----------------------------
ALTER TABLE BD_RISK_RESULT_STOCK_ST4 ADD PRIMARY KEY (ID);